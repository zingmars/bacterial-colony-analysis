import logging
import os
from keras.utils import image_dataset_from_directory

class vgg_dataset:
    def __init__(self, folder) -> None:
        self.folderName = folder
        if not os.path.isdir(self.folderName):
            logging.error(f"Could not load dataset: given folder location `{self.folderName}` is not a folder!")
            raise Exception("Dataset class could not be loaded")

    def load(self):
        # Creates a batched dataset which is unusable in the fit function (creates another dimension for batch size) and is barely documented at all.
        #self.dataset = image_dataset_from_directory(self.folderName, labels="inferred", label_mode="categorical", image_size=(512,512))
        self.dataset = image_dataset_from_directory(self.folderName, image_size=(512,512), validation_split=0.2, subset="both", seed=8946465) # Seed was randomly generated by mashin hand on numpad
        # TODO: We could use data augmentation here. 
        # However it is difficult to tell here what augmentation would be useful and wouldn't ruin the data too much, as both the size and colour of the image matters.
        # Flipping maybe?

    def get_dataset(self):
        if self.dataset is None:
            raise Exception("Dataset not loaded!")
        else:
            return self.dataset
    